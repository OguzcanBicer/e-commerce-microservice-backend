version: '3.8'


services:
################ DATABASES ################################################################################
  postgres-user:
    image: postgres:15.2
    container_name: postgres-user
    restart: always
    ports:
      - "5431:5432"
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  postgres-product:
    image: postgres:15.2
    container_name: postgres-product
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  postgres-order:
    image: postgres:15.2
    container_name: postgres-order
    restart: always
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  postgres-basket:
    image: postgres:15.2
    container_name: postgres-basket
    restart: always
    ports:
      - "5437:5432"
    environment:
      POSTGRES_DB: basket_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres


  mongo:
    image: mongo:5.0
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/db:/data/db
      - ./database/dev.archive:/Databases/dev.archive
      - ./database/production:/Databases/production
  mongo-express:
      image: mongo-express
      container_name: mexpress
      environment:
        - ME_CONFIG_MONGODB_ADMINUSERNAME=root
        - ME_CONFIG_MONGODB_ADMINPASSWORD=password
        - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
        - ME_CONFIG_BASICAUTH_USERNAME=mexpress
        - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
      links:
        - mongo
      restart: unless-stopped
      ports:
        - "8081:8081"

################ KAFKA ################################################################################
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: spring_kafka
    ports:
      - '9094:9094'
    restart: unless-stopped
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=BROKER://kafka:9092,CONTROLLER://kafka:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=BROKER://kafka:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - ALLOW_EMPTY_PASSWORD=yes

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: spring_kafka-ui
    ports:
      - "8082:8082"
    restart: unless-stopped
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - SERVER_PORT=8082
    depends_on:
      - kafka

################ ELK ################################################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch_springboot
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5012:5000/tcp"
      - "5033:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - elasticsearch
################ REDIS ##############################################################################
  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - redis_network

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight_container
    ports:
      - "8001:8001"
    networks:
      - redis_network
    depends_on:
      - redis

################################################################################################

networks:
  elastic:
    driver: bridge
  redis_network:

volumes:
  elasticsearch_data:
    driver: local